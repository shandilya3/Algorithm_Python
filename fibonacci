# not so efficient

def fib(n):
    global numFibCalls
    numFibCalls += 1
    if n == 1:
        return 1
    elif n == 2:
        return 2
    else:
        return fib(n-1) + fib(n-2)



# memoization technique which is more efficient

def fib_efficient(n, d):
    global numFibCalls
    numFibCalls += 1
    if n in d:
        return d[n]
    else:
        ans = fib_efficient(n - 1, d) + fib_efficient(n - 1, d)
        d[n] = ans
        return ans


d = {1: 1, 2: 2}
numFibCalls = 0
print(fib_efficient(6, d))
print ('function calls', numFibCalls)
print (fib(6))
print ('function calls', numFibCalls)
